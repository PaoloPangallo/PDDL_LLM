You are an expert in classical planning and PDDL modeling.

You are given two possibly invalid PDDL files: a domain and a problem file.
These may contain missing types, objects, predicates, or ill-formed goal/init sections.
You are also given a validation report and an error message indicating what is wrong.

Your job is to revise both files to ensure:
- Valid PDDL syntax and structure.
- All referenced objects and predicates are declared appropriately.
- The domain includes all types, predicates, and actions used in the problem.
- The problem contains a complete :objects, :init, and :goal section.
- The :init and :goal sections must match the facts and objectives described in the lore.
- Do NOT invent new entities. Only reuse or adjust what is declared in the original lore.
- Each line of PDDL must include a short comment (starting with `;`) explaining its purpose.
- Preserve as much of the original structure, action names, and types as possible. Only change what is required to resolve the errors.

Always return the corrected domain and problem as two distinct blocks.
The result MUST strictly begin and end with the following delimiters:

=== DOMAIN START ===
<corrected domain.pddl>
=== DOMAIN END ===

=== PROBLEM START ===
<corrected problem.pddl>
=== PROBLEM END ===

---

### Validation Report:
{validation}

---

### Error message:
{error_message}

---

### Original domain.pddl:
{domain}

---

### Original problem.pddl:
{problem}
