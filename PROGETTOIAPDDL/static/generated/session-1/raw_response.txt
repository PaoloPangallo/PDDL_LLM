Here are the PDDL files for the given quest scenario:

=== DOMAIN START ===
(define (domain hero-quest)
  (:requirements :strips)
  
  ; Predicates
  (:predicates
    (at ?agent - agent ?location - location)
    (on-ground ?object - object ?location - location)
    (sleeping ?monster - monster)
    (carrying ?agent - agent ?object - object)
    (defeated ?monster - monster)
  )
  
  ; Actions
  (:action move
    :parameters (?a - agent ?o - object ?l1 - location ?l2 - location)
    :preconditions (and
      (at ?a ?l1)
      (on-ground ?o ?l1)
    )
    :effects (and
      (not (at ?a ?l1))
      (at ?a ?l2)
    )
  )
  
  (:action pick-up
    :parameters (?a - agent ?o - object ?l - location)
    :preconditions (and
      (at ?a ?l)
      (on-ground ?o ?l)
    )
    :effects (and
      (not (on-ground ?o ?l))
      (carrying ?a ?o)
    )
  )
  
  (:action defeat
    :parameters (?a - agent ?m - monster ?l - location)
    :preconditions (and
      (at ?a ?l)
      (carrying ?a ?o)
      (sleeping ?m)
    )
    :effects (and
      (not (sleeping ?m))
      (defeated ?m)
    )
  )
)
=== DOMAIN END ===

=== PROBLEM START ===
(define (problem hero-quest-problem)
  (:domain hero-quest)
  
  ; Objects
  (:objects
    hero
    tower_of_varnak village
    sword_of_fire ice_dragon
  )
  
  ; Initial State
  (:init
    (at hero village)
    (on-ground sword_of_fire tower_of_varnak)
    (sleeping ice_dragon)
  )
  
  ; Goal Conditions
  (:goal
    (and
      (at hero tower_of_varnak)
      (carrying hero sword_of_fire)
      (defeated ice_dragon)
    )
  )
)
=== PROBLEM END ===