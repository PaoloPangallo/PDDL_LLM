Here is the output:

=== DOMAIN START ===
(define (domain hero-adventure)
  (:types 
    ; Define the types of objects in the world
    location - location
    agent - agent
    object - object
    monster - monster)

  (:predicates 
    ; Declare predicates for actions and fluents
    (at ?a ?l) - (agent ?a location ?l)
    (on-ground ?o ?l) - (object ?o location ?l)
    (sleeping ?m) - (monster ?m)
    (carrying ?a ?o) - (agent ?a object ?o)
    (defeated ?m) - (monster ?m))

  (:action 
    ; Declare actions
    move
      :parameters (?a ?from ?to)
      :preconditions 
        (and (at ?a ?from) (not (at ?a ?to)))
      :effects 
        (and (at ?a ?to) (not (at ?a ?from))))
  )

=== DOMAIN END ===

=== PROBLEM START ===
(define (problem hero-adventure-problem)
  (:domain hero-adventure)

  (:objects 
    ; Define the objects in the problem
    hero - agent
    tower-of-varnak - location
    sword-of-fire - object
    ice-dragon - monster
    village - location)

  (:init 
    ; Initialize the state of the world
    (and (at hero village)
         (on-ground sword-of-fire tower-of-varnak)
         (sleeping ice-dragon)))

  (:goal 
    ; Define the goal conditions
    (and (at hero tower-of-varnak)
         (carrying hero sword-of-fire)
         (defeated ice-dragon)))
)

=== PROBLEM END ===