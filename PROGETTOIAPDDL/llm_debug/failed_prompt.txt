You are an expert in classical planning and PDDL modeling.

You are given two possibly invalid PDDL files: a domain and a problem file.
These may contain missing types, objects, predicates, or ill-formed goal/init sections.
You are also given a validation report and an error message indicating what is wrong.

Your job is to revise both files to ensure:
- Valid PDDL syntax and structure.
- All referenced objects and predicates are declared appropriately.
- The domain includes all types, predicates, and actions used in the problem.
- The problem contains a complete :objects, :init, and :goal section.
- Any undefined entity (e.g., sword, dragon) should be invented if not present in lore.

Always return the corrected domain and problem as two distinct blocks.
The result MUST strictly begin and end with the following delimiters:

=== DOMAIN START ===
<corrected domain.pddl>
=== DOMAIN END ===

=== PROBLEM START ===
<corrected problem.pddl>
=== PROBLEM END ===

---

### Validation Report:
{
  "valid_syntax": false,
  "missing_sections": [
    "(:types",
    "(:predicates",
    "(:objects",
    "(:init",
    "(:goal"
  ],
  "undefined_objects_in_goal": [],
  "undefined_actions": [],
  "mismatched_lore_entities": [],
  "semantic_errors": [
    "‚ùå Init mismatch: expected '(at hero village)' not found in problem.",
    "‚ùå Init mismatch: expected '(on-ground sword-of-fire tower-of-varnak)' not found in problem.",
    "‚ùå Init mismatch: expected '(sleeping ice-dragon)' not found in problem."
  ]
}

---

### Error message:
Missing domain or problem for validation.

üéØ OBIETTIVO:
- Correggi i file domain.pddl e problem.pddl in modo che siano validi e coerenti.
- Se mancano oggetti o predicati nel goal, aggiungili nel dominio o negli oggetti.
- Evita simboli speciali o nomi non validi. Usa nomi semplici e coerenti.
- Tutte le sezioni devono essere presenti e complete.

‚ö†Ô∏è Errori semantici:
‚ùå Init mismatch: expected '(at hero village)' not found in problem.
‚ùå Init mismatch: expected '(on-ground sword-of-fire tower-of-varnak)' not found in problem.
‚ùå Init mismatch: expected '(sleeping ice-dragon)' not found in problem.

---

### Original domain.pddl:
(define (domain tower-of-varnak)
      :requirements ((linear))
      :types agent location monster object
      :predicates
        (at ?a ?loc)
        (on-ground ?o ?loc)
        (carrying ?a ?o)
        (sleeping ?m)
        (awake ?m)
      :actions
        (move
          :parameters (?a ?loc1 ?loc2)
          :precondition (and (at ?a ?loc1) (not (on-ground ?a ?loc1)))
          :effect (and (at ?a ?loc2) (not (at ?a ?loc1)) (not (on-ground ?a ?loc1))))
        (pickup
          :parameters (?a ?o ?loc)
          :precondition (and (and (on-ground ?o ?loc) (at ?a ?loc)) (not (carrying ?a ?o)))
          :effect (and (not (on-ground ?o ?loc)) (carrying ?a ?o))))
   (:type location (village tower-of-varnak))
   (:function location-north ?loc -1)
   (:function location-east ?loc 1)
   (:function location-west ?loc -1)
   (:function location-south ?loc 1)
   (:type monster (sleeping awake))
   (:function sleeping-awake ?m 0)
   (:action wake-dragon
     :parameters (?m)
     :precondition (and (sleeping ?m))
     :effect (and (not (sleeping ?m)) (awake ?m)))

---

### Original problem.pddl:
(define (problem tower-of-varnak-problem)
      :domain tower-of-varnak
      :objects
        (hero village hero-sword tower-of-varnak ice-dragon)
      :init
        (and
          (at hero village)
          (on-ground sword-of-fire tower-of-varnak)
          (sleeping ice-dragon))
      :goal (and (at hero tower-of-varnak) (awake ice-dragon) (carrying hero sword-of-fire)))
